/* soapH.h
   Generated by gSOAP 2.8.11 from service.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_begin_send(soap) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__GetState
#define SOAP_TYPE_ns1__GetState (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GetState(struct soap*, struct ns1__GetState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GetState(struct soap*, const struct ns1__GetState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetState(struct soap*, const char*, int, const struct ns1__GetState *, const char*);
SOAP_FMAC3 struct ns1__GetState * SOAP_FMAC4 soap_in_ns1__GetState(struct soap*, const char*, struct ns1__GetState *, const char*);

#ifndef soap_write_ns1__GetState
#define soap_write_ns1__GetState(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__GetState(soap, data), 0) || soap_put_ns1__GetState(soap, data, "ns1:GetState", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GetState(struct soap*, const struct ns1__GetState *, const char*, const char*);

#ifndef soap_read_ns1__GetState
#define soap_read_ns1__GetState(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetState(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__GetState * SOAP_FMAC4 soap_get_ns1__GetState(struct soap*, struct ns1__GetState *, const char*, const char*);

#define soap_new_ns1__GetState(soap, n) soap_instantiate_ns1__GetState(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__GetState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__GetState * SOAP_FMAC2 soap_instantiate_ns1__GetState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetStateResponse
#define SOAP_TYPE_ns1__GetStateResponse (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GetStateResponse(struct soap*, struct ns1__GetStateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GetStateResponse(struct soap*, const struct ns1__GetStateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetStateResponse(struct soap*, const char*, int, const struct ns1__GetStateResponse *, const char*);
SOAP_FMAC3 struct ns1__GetStateResponse * SOAP_FMAC4 soap_in_ns1__GetStateResponse(struct soap*, const char*, struct ns1__GetStateResponse *, const char*);

#ifndef soap_write_ns1__GetStateResponse
#define soap_write_ns1__GetStateResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__GetStateResponse(soap, data), 0) || soap_put_ns1__GetStateResponse(soap, data, "ns1:GetStateResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GetStateResponse(struct soap*, const struct ns1__GetStateResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetStateResponse
#define soap_read_ns1__GetStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__GetStateResponse * SOAP_FMAC4 soap_get_ns1__GetStateResponse(struct soap*, struct ns1__GetStateResponse *, const char*, const char*);

#define soap_new_ns1__GetStateResponse(soap, n) soap_instantiate_ns1__GetStateResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__GetStateResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__GetStateResponse * SOAP_FMAC2 soap_instantiate_ns1__GetStateResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__SwitchAccount
#define SOAP_TYPE_ns1__SwitchAccount (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SwitchAccount(struct soap*, struct ns1__SwitchAccount *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__SwitchAccount(struct soap*, const struct ns1__SwitchAccount *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SwitchAccount(struct soap*, const char*, int, const struct ns1__SwitchAccount *, const char*);
SOAP_FMAC3 struct ns1__SwitchAccount * SOAP_FMAC4 soap_in_ns1__SwitchAccount(struct soap*, const char*, struct ns1__SwitchAccount *, const char*);

#ifndef soap_write_ns1__SwitchAccount
#define soap_write_ns1__SwitchAccount(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__SwitchAccount(soap, data), 0) || soap_put_ns1__SwitchAccount(soap, data, "ns1:SwitchAccount", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SwitchAccount(struct soap*, const struct ns1__SwitchAccount *, const char*, const char*);

#ifndef soap_read_ns1__SwitchAccount
#define soap_read_ns1__SwitchAccount(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SwitchAccount(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__SwitchAccount * SOAP_FMAC4 soap_get_ns1__SwitchAccount(struct soap*, struct ns1__SwitchAccount *, const char*, const char*);

#define soap_new_ns1__SwitchAccount(soap, n) soap_instantiate_ns1__SwitchAccount(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__SwitchAccount(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__SwitchAccount * SOAP_FMAC2 soap_instantiate_ns1__SwitchAccount(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__SwitchAccount(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__SwitchAccountResponse
#define SOAP_TYPE_ns1__SwitchAccountResponse (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SwitchAccountResponse(struct soap*, struct ns1__SwitchAccountResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__SwitchAccountResponse(struct soap*, const struct ns1__SwitchAccountResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SwitchAccountResponse(struct soap*, const char*, int, const struct ns1__SwitchAccountResponse *, const char*);
SOAP_FMAC3 struct ns1__SwitchAccountResponse * SOAP_FMAC4 soap_in_ns1__SwitchAccountResponse(struct soap*, const char*, struct ns1__SwitchAccountResponse *, const char*);

#ifndef soap_write_ns1__SwitchAccountResponse
#define soap_write_ns1__SwitchAccountResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__SwitchAccountResponse(soap, data), 0) || soap_put_ns1__SwitchAccountResponse(soap, data, "ns1:SwitchAccountResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SwitchAccountResponse(struct soap*, const struct ns1__SwitchAccountResponse *, const char*, const char*);

#ifndef soap_read_ns1__SwitchAccountResponse
#define soap_read_ns1__SwitchAccountResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SwitchAccountResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__SwitchAccountResponse * SOAP_FMAC4 soap_get_ns1__SwitchAccountResponse(struct soap*, struct ns1__SwitchAccountResponse *, const char*, const char*);

#define soap_new_ns1__SwitchAccountResponse(soap, n) soap_instantiate_ns1__SwitchAccountResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__SwitchAccountResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__SwitchAccountResponse * SOAP_FMAC2 soap_instantiate_ns1__SwitchAccountResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__SwitchAccountResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Transfert
#define SOAP_TYPE_ns1__Transfert (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Transfert(struct soap*, struct ns1__Transfert *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Transfert(struct soap*, const struct ns1__Transfert *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Transfert(struct soap*, const char*, int, const struct ns1__Transfert *, const char*);
SOAP_FMAC3 struct ns1__Transfert * SOAP_FMAC4 soap_in_ns1__Transfert(struct soap*, const char*, struct ns1__Transfert *, const char*);

#ifndef soap_write_ns1__Transfert
#define soap_write_ns1__Transfert(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__Transfert(soap, data), 0) || soap_put_ns1__Transfert(soap, data, "ns1:Transfert", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Transfert(struct soap*, const struct ns1__Transfert *, const char*, const char*);

#ifndef soap_read_ns1__Transfert
#define soap_read_ns1__Transfert(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Transfert(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__Transfert * SOAP_FMAC4 soap_get_ns1__Transfert(struct soap*, struct ns1__Transfert *, const char*, const char*);

#define soap_new_ns1__Transfert(soap, n) soap_instantiate_ns1__Transfert(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Transfert(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__Transfert * SOAP_FMAC2 soap_instantiate_ns1__Transfert(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Transfert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__TransfertResponse
#define SOAP_TYPE_ns1__TransfertResponse (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__TransfertResponse(struct soap*, struct ns1__TransfertResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__TransfertResponse(struct soap*, const struct ns1__TransfertResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__TransfertResponse(struct soap*, const char*, int, const struct ns1__TransfertResponse *, const char*);
SOAP_FMAC3 struct ns1__TransfertResponse * SOAP_FMAC4 soap_in_ns1__TransfertResponse(struct soap*, const char*, struct ns1__TransfertResponse *, const char*);

#ifndef soap_write_ns1__TransfertResponse
#define soap_write_ns1__TransfertResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__TransfertResponse(soap, data), 0) || soap_put_ns1__TransfertResponse(soap, data, "ns1:TransfertResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__TransfertResponse(struct soap*, const struct ns1__TransfertResponse *, const char*, const char*);

#ifndef soap_read_ns1__TransfertResponse
#define soap_read_ns1__TransfertResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__TransfertResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__TransfertResponse * SOAP_FMAC4 soap_get_ns1__TransfertResponse(struct soap*, struct ns1__TransfertResponse *, const char*, const char*);

#define soap_new_ns1__TransfertResponse(soap, n) soap_instantiate_ns1__TransfertResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__TransfertResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__TransfertResponse * SOAP_FMAC2 soap_instantiate_ns1__TransfertResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__TransfertResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__initAccounts
#define SOAP_TYPE_ns1__initAccounts (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__initAccounts(struct soap*, struct ns1__initAccounts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__initAccounts(struct soap*, const struct ns1__initAccounts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__initAccounts(struct soap*, const char*, int, const struct ns1__initAccounts *, const char*);
SOAP_FMAC3 struct ns1__initAccounts * SOAP_FMAC4 soap_in_ns1__initAccounts(struct soap*, const char*, struct ns1__initAccounts *, const char*);

#ifndef soap_write_ns1__initAccounts
#define soap_write_ns1__initAccounts(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__initAccounts(soap, data), 0) || soap_put_ns1__initAccounts(soap, data, "ns1:initAccounts", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__initAccounts(struct soap*, const struct ns1__initAccounts *, const char*, const char*);

#ifndef soap_read_ns1__initAccounts
#define soap_read_ns1__initAccounts(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__initAccounts(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__initAccounts * SOAP_FMAC4 soap_get_ns1__initAccounts(struct soap*, struct ns1__initAccounts *, const char*, const char*);

#define soap_new_ns1__initAccounts(soap, n) soap_instantiate_ns1__initAccounts(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__initAccounts(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__initAccounts * SOAP_FMAC2 soap_instantiate_ns1__initAccounts(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__initAccounts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__initAccountsResponse
#define SOAP_TYPE_ns1__initAccountsResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__initAccountsResponse(struct soap*, struct ns1__initAccountsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__initAccountsResponse(struct soap*, const struct ns1__initAccountsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__initAccountsResponse(struct soap*, const char*, int, const struct ns1__initAccountsResponse *, const char*);
SOAP_FMAC3 struct ns1__initAccountsResponse * SOAP_FMAC4 soap_in_ns1__initAccountsResponse(struct soap*, const char*, struct ns1__initAccountsResponse *, const char*);

#ifndef soap_write_ns1__initAccountsResponse
#define soap_write_ns1__initAccountsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__initAccountsResponse(soap, data), 0) || soap_put_ns1__initAccountsResponse(soap, data, "ns1:initAccountsResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__initAccountsResponse(struct soap*, const struct ns1__initAccountsResponse *, const char*, const char*);

#ifndef soap_read_ns1__initAccountsResponse
#define soap_read_ns1__initAccountsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__initAccountsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__initAccountsResponse * SOAP_FMAC4 soap_get_ns1__initAccountsResponse(struct soap*, struct ns1__initAccountsResponse *, const char*, const char*);

#define soap_new_ns1__initAccountsResponse(soap, n) soap_instantiate_ns1__initAccountsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__initAccountsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__initAccountsResponse * SOAP_FMAC2 soap_instantiate_ns1__initAccountsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__initAccountsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Withdraw
#define SOAP_TYPE_ns1__Withdraw (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Withdraw(struct soap*, struct ns1__Withdraw *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Withdraw(struct soap*, const struct ns1__Withdraw *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Withdraw(struct soap*, const char*, int, const struct ns1__Withdraw *, const char*);
SOAP_FMAC3 struct ns1__Withdraw * SOAP_FMAC4 soap_in_ns1__Withdraw(struct soap*, const char*, struct ns1__Withdraw *, const char*);

#ifndef soap_write_ns1__Withdraw
#define soap_write_ns1__Withdraw(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__Withdraw(soap, data), 0) || soap_put_ns1__Withdraw(soap, data, "ns1:Withdraw", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Withdraw(struct soap*, const struct ns1__Withdraw *, const char*, const char*);

#ifndef soap_read_ns1__Withdraw
#define soap_read_ns1__Withdraw(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Withdraw(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__Withdraw * SOAP_FMAC4 soap_get_ns1__Withdraw(struct soap*, struct ns1__Withdraw *, const char*, const char*);

#define soap_new_ns1__Withdraw(soap, n) soap_instantiate_ns1__Withdraw(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Withdraw(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__Withdraw * SOAP_FMAC2 soap_instantiate_ns1__Withdraw(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Withdraw(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__WithdrawResponse
#define SOAP_TYPE_ns1__WithdrawResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__WithdrawResponse(struct soap*, struct ns1__WithdrawResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__WithdrawResponse(struct soap*, const struct ns1__WithdrawResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__WithdrawResponse(struct soap*, const char*, int, const struct ns1__WithdrawResponse *, const char*);
SOAP_FMAC3 struct ns1__WithdrawResponse * SOAP_FMAC4 soap_in_ns1__WithdrawResponse(struct soap*, const char*, struct ns1__WithdrawResponse *, const char*);

#ifndef soap_write_ns1__WithdrawResponse
#define soap_write_ns1__WithdrawResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__WithdrawResponse(soap, data), 0) || soap_put_ns1__WithdrawResponse(soap, data, "ns1:WithdrawResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__WithdrawResponse(struct soap*, const struct ns1__WithdrawResponse *, const char*, const char*);

#ifndef soap_read_ns1__WithdrawResponse
#define soap_read_ns1__WithdrawResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__WithdrawResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__WithdrawResponse * SOAP_FMAC4 soap_get_ns1__WithdrawResponse(struct soap*, struct ns1__WithdrawResponse *, const char*, const char*);

#define soap_new_ns1__WithdrawResponse(soap, n) soap_instantiate_ns1__WithdrawResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__WithdrawResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__WithdrawResponse * SOAP_FMAC2 soap_instantiate_ns1__WithdrawResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__WithdrawResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Deposit
#define SOAP_TYPE_ns1__Deposit (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Deposit(struct soap*, struct ns1__Deposit *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Deposit(struct soap*, const struct ns1__Deposit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Deposit(struct soap*, const char*, int, const struct ns1__Deposit *, const char*);
SOAP_FMAC3 struct ns1__Deposit * SOAP_FMAC4 soap_in_ns1__Deposit(struct soap*, const char*, struct ns1__Deposit *, const char*);

#ifndef soap_write_ns1__Deposit
#define soap_write_ns1__Deposit(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__Deposit(soap, data), 0) || soap_put_ns1__Deposit(soap, data, "ns1:Deposit", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Deposit(struct soap*, const struct ns1__Deposit *, const char*, const char*);

#ifndef soap_read_ns1__Deposit
#define soap_read_ns1__Deposit(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Deposit(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__Deposit * SOAP_FMAC4 soap_get_ns1__Deposit(struct soap*, struct ns1__Deposit *, const char*, const char*);

#define soap_new_ns1__Deposit(soap, n) soap_instantiate_ns1__Deposit(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Deposit(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__Deposit * SOAP_FMAC2 soap_instantiate_ns1__Deposit(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Deposit(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__DepositResponse
#define SOAP_TYPE_ns1__DepositResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__DepositResponse(struct soap*, struct ns1__DepositResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__DepositResponse(struct soap*, const struct ns1__DepositResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__DepositResponse(struct soap*, const char*, int, const struct ns1__DepositResponse *, const char*);
SOAP_FMAC3 struct ns1__DepositResponse * SOAP_FMAC4 soap_in_ns1__DepositResponse(struct soap*, const char*, struct ns1__DepositResponse *, const char*);

#ifndef soap_write_ns1__DepositResponse
#define soap_write_ns1__DepositResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__DepositResponse(soap, data), 0) || soap_put_ns1__DepositResponse(soap, data, "ns1:DepositResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__DepositResponse(struct soap*, const struct ns1__DepositResponse *, const char*, const char*);

#ifndef soap_read_ns1__DepositResponse
#define soap_read_ns1__DepositResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__DepositResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__DepositResponse * SOAP_FMAC4 soap_get_ns1__DepositResponse(struct soap*, struct ns1__DepositResponse *, const char*, const char*);

#define soap_new_ns1__DepositResponse(soap, n) soap_instantiate_ns1__DepositResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__DepositResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__DepositResponse * SOAP_FMAC2 soap_instantiate_ns1__DepositResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__DepositResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getstatus
#define SOAP_TYPE_ns__getstatus (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getstatus(struct soap*, struct ns__getstatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getstatus(struct soap*, const struct ns__getstatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getstatus(struct soap*, const char*, int, const struct ns__getstatus *, const char*);
SOAP_FMAC3 struct ns__getstatus * SOAP_FMAC4 soap_in_ns__getstatus(struct soap*, const char*, struct ns__getstatus *, const char*);

#ifndef soap_write_ns__getstatus
#define soap_write_ns__getstatus(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getstatus(soap, data), 0) || soap_put_ns__getstatus(soap, data, "ns:getstatus", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getstatus(struct soap*, const struct ns__getstatus *, const char*, const char*);

#ifndef soap_read_ns__getstatus
#define soap_read_ns__getstatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getstatus(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getstatus * SOAP_FMAC4 soap_get_ns__getstatus(struct soap*, struct ns__getstatus *, const char*, const char*);

#define soap_new_ns__getstatus(soap, n) soap_instantiate_ns__getstatus(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getstatus(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getstatus * SOAP_FMAC2 soap_instantiate_ns__getstatus(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getstatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getstatusResponse
#define SOAP_TYPE_ns__getstatusResponse (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getstatusResponse(struct soap*, struct ns__getstatusResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getstatusResponse(struct soap*, const struct ns__getstatusResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getstatusResponse(struct soap*, const char*, int, const struct ns__getstatusResponse *, const char*);
SOAP_FMAC3 struct ns__getstatusResponse * SOAP_FMAC4 soap_in_ns__getstatusResponse(struct soap*, const char*, struct ns__getstatusResponse *, const char*);

#ifndef soap_write_ns__getstatusResponse
#define soap_write_ns__getstatusResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getstatusResponse(soap, data), 0) || soap_put_ns__getstatusResponse(soap, data, "ns:getstatusResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getstatusResponse(struct soap*, const struct ns__getstatusResponse *, const char*, const char*);

#ifndef soap_read_ns__getstatusResponse
#define soap_read_ns__getstatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getstatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getstatusResponse * SOAP_FMAC4 soap_get_ns__getstatusResponse(struct soap*, struct ns__getstatusResponse *, const char*, const char*);

#define soap_new_ns__getstatusResponse(soap, n) soap_instantiate_ns__getstatusResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getstatusResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getstatusResponse * SOAP_FMAC2 soap_instantiate_ns__getstatusResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getstatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getbalance
#define SOAP_TYPE_ns__getbalance (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getbalance(struct soap*, struct ns__getbalance *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getbalance(struct soap*, const struct ns__getbalance *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getbalance(struct soap*, const char*, int, const struct ns__getbalance *, const char*);
SOAP_FMAC3 struct ns__getbalance * SOAP_FMAC4 soap_in_ns__getbalance(struct soap*, const char*, struct ns__getbalance *, const char*);

#ifndef soap_write_ns__getbalance
#define soap_write_ns__getbalance(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getbalance(soap, data), 0) || soap_put_ns__getbalance(soap, data, "ns:getbalance", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getbalance(struct soap*, const struct ns__getbalance *, const char*, const char*);

#ifndef soap_read_ns__getbalance
#define soap_read_ns__getbalance(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getbalance(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getbalance * SOAP_FMAC4 soap_get_ns__getbalance(struct soap*, struct ns__getbalance *, const char*, const char*);

#define soap_new_ns__getbalance(soap, n) soap_instantiate_ns__getbalance(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getbalance(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getbalance * SOAP_FMAC2 soap_instantiate_ns__getbalance(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getbalance(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getbalanceResponse
#define SOAP_TYPE_ns__getbalanceResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getbalanceResponse(struct soap*, struct ns__getbalanceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getbalanceResponse(struct soap*, const struct ns__getbalanceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getbalanceResponse(struct soap*, const char*, int, const struct ns__getbalanceResponse *, const char*);
SOAP_FMAC3 struct ns__getbalanceResponse * SOAP_FMAC4 soap_in_ns__getbalanceResponse(struct soap*, const char*, struct ns__getbalanceResponse *, const char*);

#ifndef soap_write_ns__getbalanceResponse
#define soap_write_ns__getbalanceResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getbalanceResponse(soap, data), 0) || soap_put_ns__getbalanceResponse(soap, data, "ns:getbalanceResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getbalanceResponse(struct soap*, const struct ns__getbalanceResponse *, const char*, const char*);

#ifndef soap_read_ns__getbalanceResponse
#define soap_read_ns__getbalanceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getbalanceResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getbalanceResponse * SOAP_FMAC4 soap_get_ns__getbalanceResponse(struct soap*, struct ns__getbalanceResponse *, const char*, const char*);

#define soap_new_ns__getbalanceResponse(soap, n) soap_instantiate_ns__getbalanceResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getbalanceResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getbalanceResponse * SOAP_FMAC2 soap_instantiate_ns__getbalanceResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getbalanceResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__init
#define SOAP_TYPE_ns__init (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__init(struct soap*, struct ns__init *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__init(struct soap*, const struct ns__init *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__init(struct soap*, const char*, int, const struct ns__init *, const char*);
SOAP_FMAC3 struct ns__init * SOAP_FMAC4 soap_in_ns__init(struct soap*, const char*, struct ns__init *, const char*);

#ifndef soap_write_ns__init
#define soap_write_ns__init(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__init(soap, data), 0) || soap_put_ns__init(soap, data, "ns:init", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__init(struct soap*, const struct ns__init *, const char*, const char*);

#ifndef soap_read_ns__init
#define soap_read_ns__init(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__init(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__init * SOAP_FMAC4 soap_get_ns__init(struct soap*, struct ns__init *, const char*, const char*);

#define soap_new_ns__init(soap, n) soap_instantiate_ns__init(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__init(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__init * SOAP_FMAC2 soap_instantiate_ns__init(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__init(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__initResponse
#define SOAP_TYPE_ns__initResponse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__initResponse(struct soap*, struct ns__initResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__initResponse(struct soap*, const struct ns__initResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__initResponse(struct soap*, const char*, int, const struct ns__initResponse *, const char*);
SOAP_FMAC3 struct ns__initResponse * SOAP_FMAC4 soap_in_ns__initResponse(struct soap*, const char*, struct ns__initResponse *, const char*);

#ifndef soap_write_ns__initResponse
#define soap_write_ns__initResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__initResponse(soap, data), 0) || soap_put_ns__initResponse(soap, data, "ns:initResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__initResponse(struct soap*, const struct ns__initResponse *, const char*, const char*);

#ifndef soap_read_ns__initResponse
#define soap_read_ns__initResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__initResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__initResponse * SOAP_FMAC4 soap_get_ns__initResponse(struct soap*, struct ns__initResponse *, const char*, const char*);

#define soap_new_ns__initResponse(soap, n) soap_instantiate_ns__initResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__initResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__initResponse * SOAP_FMAC2 soap_instantiate_ns__initResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__initResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__remove
#define SOAP_TYPE_ns__remove (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__remove(struct soap*, struct ns__remove *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__remove(struct soap*, const struct ns__remove *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__remove(struct soap*, const char*, int, const struct ns__remove *, const char*);
SOAP_FMAC3 struct ns__remove * SOAP_FMAC4 soap_in_ns__remove(struct soap*, const char*, struct ns__remove *, const char*);

#ifndef soap_write_ns__remove
#define soap_write_ns__remove(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__remove(soap, data), 0) || soap_put_ns__remove(soap, data, "ns:remove", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__remove(struct soap*, const struct ns__remove *, const char*, const char*);

#ifndef soap_read_ns__remove
#define soap_read_ns__remove(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__remove(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__remove * SOAP_FMAC4 soap_get_ns__remove(struct soap*, struct ns__remove *, const char*, const char*);

#define soap_new_ns__remove(soap, n) soap_instantiate_ns__remove(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__remove(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__remove * SOAP_FMAC2 soap_instantiate_ns__remove(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__remove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__removeResponse
#define SOAP_TYPE_ns__removeResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__removeResponse(struct soap*, struct ns__removeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__removeResponse(struct soap*, const struct ns__removeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__removeResponse(struct soap*, const char*, int, const struct ns__removeResponse *, const char*);
SOAP_FMAC3 struct ns__removeResponse * SOAP_FMAC4 soap_in_ns__removeResponse(struct soap*, const char*, struct ns__removeResponse *, const char*);

#ifndef soap_write_ns__removeResponse
#define soap_write_ns__removeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__removeResponse(soap, data), 0) || soap_put_ns__removeResponse(soap, data, "ns:removeResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__removeResponse(struct soap*, const struct ns__removeResponse *, const char*, const char*);

#ifndef soap_read_ns__removeResponse
#define soap_read_ns__removeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__removeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__removeResponse * SOAP_FMAC4 soap_get_ns__removeResponse(struct soap*, struct ns__removeResponse *, const char*, const char*);

#define soap_new_ns__removeResponse(soap, n) soap_instantiate_ns__removeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__removeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__removeResponse * SOAP_FMAC2 soap_instantiate_ns__removeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__removeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__add
#define SOAP_TYPE_ns__add (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__add(struct soap*, struct ns__add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__add(struct soap*, const struct ns__add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__add(struct soap*, const char*, int, const struct ns__add *, const char*);
SOAP_FMAC3 struct ns__add * SOAP_FMAC4 soap_in_ns__add(struct soap*, const char*, struct ns__add *, const char*);

#ifndef soap_write_ns__add
#define soap_write_ns__add(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__add(soap, data), 0) || soap_put_ns__add(soap, data, "ns:add", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__add(struct soap*, const struct ns__add *, const char*, const char*);

#ifndef soap_read_ns__add
#define soap_read_ns__add(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__add(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__add * SOAP_FMAC4 soap_get_ns__add(struct soap*, struct ns__add *, const char*, const char*);

#define soap_new_ns__add(soap, n) soap_instantiate_ns__add(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__add(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__add * SOAP_FMAC2 soap_instantiate_ns__add(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__add(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__addResponse
#define SOAP_TYPE_ns__addResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__addResponse(struct soap*, struct ns__addResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__addResponse(struct soap*, const struct ns__addResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__addResponse(struct soap*, const char*, int, const struct ns__addResponse *, const char*);
SOAP_FMAC3 struct ns__addResponse * SOAP_FMAC4 soap_in_ns__addResponse(struct soap*, const char*, struct ns__addResponse *, const char*);

#ifndef soap_write_ns__addResponse
#define soap_write_ns__addResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__addResponse(soap, data), 0) || soap_put_ns__addResponse(soap, data, "ns:addResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__addResponse(struct soap*, const struct ns__addResponse *, const char*, const char*);

#ifndef soap_read_ns__addResponse
#define soap_read_ns__addResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__addResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__addResponse * SOAP_FMAC4 soap_get_ns__addResponse(struct soap*, struct ns__addResponse *, const char*, const char*);

#define soap_new_ns__addResponse(soap, n) soap_instantiate_ns__addResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__addResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__addResponse * SOAP_FMAC2 soap_instantiate_ns__addResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__addResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostring(soap, data), 0) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);

#ifndef soap_write_PointerTobool
#define soap_write_PointerTobool(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTobool(soap, data), 0) || soap_put_PointerTobool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);

#ifndef soap_read_PointerTobool
#define soap_read_PointerTobool(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTobool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
