/* soapBankProxy.cpp
   Generated by gSOAP 2.8.11 from service.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapBankProxy.h"

BankProxy::BankProxy()
{	BankProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BankProxy::BankProxy(const struct soap &_soap) : soap(_soap)
{ }

BankProxy::BankProxy(const char *url)
{	BankProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

BankProxy::BankProxy(soap_mode iomode)
{	BankProxy_init(iomode, iomode);
}

BankProxy::BankProxy(const char *url, soap_mode iomode)
{	BankProxy_init(iomode, iomode);
	soap_endpoint = url;
}

BankProxy::BankProxy(soap_mode imode, soap_mode omode)
{	BankProxy_init(imode, omode);
}

BankProxy::~BankProxy()
{ }

void BankProxy::BankProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns", "urn:Account", NULL, NULL},
	{"ns1", "urn:Bank", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void BankProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void BankProxy::reset()
{	destroy();
	soap_done(this);
	soap_init(this);
	BankProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void BankProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *BankProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *BankProxy::soap_fault()
{	return this->fault;
}

const char *BankProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *BankProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int BankProxy::soap_close_socket()
{	return soap_closesock(this);
}

int BankProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void BankProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void BankProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *BankProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int BankProxy::Deposit(const char *endpoint, const char *soap_action, float entry, char **rresult)
{	struct soap *soap = this;
	struct ns1__Deposit soap_tmp_ns1__Deposit;
	struct ns1__DepositResponse *soap_tmp_ns1__DepositResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	soap->encodingStyle = "";
	soap_tmp_ns1__Deposit.entry = entry;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__Deposit(soap, &soap_tmp_ns1__Deposit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__Deposit(soap, &soap_tmp_ns1__Deposit, "ns1:Deposit", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__Deposit(soap, &soap_tmp_ns1__Deposit, "ns1:Deposit", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!rresult)
		return soap_closesock(soap);
	*rresult = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__DepositResponse = soap_get_ns1__DepositResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (rresult && soap_tmp_ns1__DepositResponse->rresult)
		*rresult = *soap_tmp_ns1__DepositResponse->rresult;
	return soap_closesock(soap);
}

int BankProxy::Withdraw(const char *endpoint, const char *soap_action, float entry, char **rresult)
{	struct soap *soap = this;
	struct ns1__Withdraw soap_tmp_ns1__Withdraw;
	struct ns1__WithdrawResponse *soap_tmp_ns1__WithdrawResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	soap->encodingStyle = "";
	soap_tmp_ns1__Withdraw.entry = entry;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__Withdraw(soap, &soap_tmp_ns1__Withdraw);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__Withdraw(soap, &soap_tmp_ns1__Withdraw, "ns1:Withdraw", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__Withdraw(soap, &soap_tmp_ns1__Withdraw, "ns1:Withdraw", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!rresult)
		return soap_closesock(soap);
	*rresult = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__WithdrawResponse = soap_get_ns1__WithdrawResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (rresult && soap_tmp_ns1__WithdrawResponse->rresult)
		*rresult = *soap_tmp_ns1__WithdrawResponse->rresult;
	return soap_closesock(soap);
}

int BankProxy::initAccounts(const char *endpoint, const char *soap_action, int bankid, char **rresult)
{	struct soap *soap = this;
	struct ns1__initAccounts soap_tmp_ns1__initAccounts;
	struct ns1__initAccountsResponse *soap_tmp_ns1__initAccountsResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	soap->encodingStyle = "";
	soap_tmp_ns1__initAccounts.bankid = bankid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__initAccounts(soap, &soap_tmp_ns1__initAccounts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__initAccounts(soap, &soap_tmp_ns1__initAccounts, "ns1:initAccounts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__initAccounts(soap, &soap_tmp_ns1__initAccounts, "ns1:initAccounts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!rresult)
		return soap_closesock(soap);
	*rresult = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__initAccountsResponse = soap_get_ns1__initAccountsResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (rresult && soap_tmp_ns1__initAccountsResponse->rresult)
		*rresult = *soap_tmp_ns1__initAccountsResponse->rresult;
	return soap_closesock(soap);
}

int BankProxy::Transfert(const char *endpoint, const char *soap_action, float entry, int accountid, char **rresult)
{	struct soap *soap = this;
	struct ns1__Transfert soap_tmp_ns1__Transfert;
	struct ns1__TransfertResponse *soap_tmp_ns1__TransfertResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	soap->encodingStyle = "";
	soap_tmp_ns1__Transfert.entry = entry;
	soap_tmp_ns1__Transfert.accountid = accountid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__Transfert(soap, &soap_tmp_ns1__Transfert);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__Transfert(soap, &soap_tmp_ns1__Transfert, "ns1:Transfert", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__Transfert(soap, &soap_tmp_ns1__Transfert, "ns1:Transfert", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!rresult)
		return soap_closesock(soap);
	*rresult = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__TransfertResponse = soap_get_ns1__TransfertResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (rresult && soap_tmp_ns1__TransfertResponse->rresult)
		*rresult = *soap_tmp_ns1__TransfertResponse->rresult;
	return soap_closesock(soap);
}

int BankProxy::SwitchAccount(const char *endpoint, const char *soap_action, int bankid, char **rresult)
{	struct soap *soap = this;
	struct ns1__SwitchAccount soap_tmp_ns1__SwitchAccount;
	struct ns1__SwitchAccountResponse *soap_tmp_ns1__SwitchAccountResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	soap->encodingStyle = "";
	soap_tmp_ns1__SwitchAccount.bankid = bankid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__SwitchAccount(soap, &soap_tmp_ns1__SwitchAccount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__SwitchAccount(soap, &soap_tmp_ns1__SwitchAccount, "ns1:SwitchAccount", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__SwitchAccount(soap, &soap_tmp_ns1__SwitchAccount, "ns1:SwitchAccount", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!rresult)
		return soap_closesock(soap);
	*rresult = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__SwitchAccountResponse = soap_get_ns1__SwitchAccountResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (rresult && soap_tmp_ns1__SwitchAccountResponse->rresult)
		*rresult = *soap_tmp_ns1__SwitchAccountResponse->rresult;
	return soap_closesock(soap);
}

int BankProxy::GetState(const char *endpoint, const char *soap_action, char **rresult)
{	struct soap *soap = this;
	struct ns1__GetState soap_tmp_ns1__GetState;
	struct ns1__GetStateResponse *soap_tmp_ns1__GetStateResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	soap->encodingStyle = "";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__GetState(soap, &soap_tmp_ns1__GetState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__GetState(soap, &soap_tmp_ns1__GetState, "ns1:GetState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__GetState(soap, &soap_tmp_ns1__GetState, "ns1:GetState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!rresult)
		return soap_closesock(soap);
	*rresult = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__GetStateResponse = soap_get_ns1__GetStateResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (rresult && soap_tmp_ns1__GetStateResponse->rresult)
		*rresult = *soap_tmp_ns1__GetStateResponse->rresult;
	return soap_closesock(soap);
}
/* End of client proxy code */
